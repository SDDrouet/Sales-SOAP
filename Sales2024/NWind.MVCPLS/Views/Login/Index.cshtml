@model Entities.LoginRequest

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style>
        /* Reset de márgenes y padding */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Body */
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            background-color: #f4f4f4;
            color: #333;
            padding: 20px;
        }

        /* Contenedor principal */
        div {
            margin: 20px 0;
        }

        /* Estilos de encabezados */
        h1, h2 {
            color: #333;
            margin-bottom: 15px;
        }

        /* Estilo para formularios */
        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

            form div {
                margin-bottom: 15px;
            }

            form label {
                display: block;
                font-weight: bold;
                margin-bottom: 5px;
            }

            form input, form select, form button {
                width: 100%;
                padding: 10px;
                font-size: 1rem;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

            form button {
                background-color: #007bff;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                form button:hover {
                    background-color: #0056b3;
                }

        /* Estilo para botones */
        button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }

            button:hover {
                background-color: #0056b3;
            }

        /* Estilo para las tablas */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fff;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        /* Navegación */
        nav ul {
            list-style: none;
            padding: 0;
        }

            nav ul li {
                display: inline;
                margin-right: 20px;
            }

                nav ul li a {
                    text-decoration: none;
                    color: #007bff;
                    font-weight: bold;
                }

                    nav ul li a:hover {
                        text-decoration: underline;
                    }

        /* Mensajes de éxito / error */
        p.success, p.error {
            font-size: 1.2rem;
            margin-top: 20px;
            text-align: center;
        }

        p.success {
            color: green;
        }

        p.error {
            color: red;
        }

        /* Estilo para el centro de la página (verificación) */
        div[style="text-align: center; margin-top: 50px;"] {
            margin-top: 50px;
            text-align: center;
        }

        /* Botón de cierre de sesión */
        #logoutButton, #homebtn {
            background-color: #f44336;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 10px 20px;
            cursor: pointer;
            margin-top: 20px;
        }

            #logoutButton:hover, #homebtn:hover {
                background-color: #d32f2f;
            }

        /* Ajustes para formularios con estilos condicionales */
        input:focus, select:focus, button:focus {
            outline: none;
            border-color: #007bff;
        }

        /* Ajustes para el login */
        #loginForm input[type="submit"] {
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 10px;
            cursor: pointer;
        }

            #loginForm input[type="submit"]:hover {
                background-color: #218838;
            }

        #loginForm div {
            margin-bottom: 15px;
        }

        #loginForm input {
            width: 100%;
            padding: 10px;
        }

        /* Estilos para el formulario de actualización de usuario */
        #updateUserForm {
            display: none;
        }

        /* Estilo de enlace */
        a {
            color: #007bff;
            text-decoration: none;
        }

            a:hover {
                text-decoration: underline;
            }

    </style>
</head>
<body>
    <h1>Login</h1>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "loginForm" }))
    {
        <div>
            Usuario: @Html.TextBoxFor(p => p.Username)
        </div>
        <div>
            Contraseña: @Html.PasswordFor(p => p.Password)
        </div>
        <div>
            <input type="submit" value="Iniciar Sesión" />
        </div>
        <div>
            <button onclick="location.href='/Login/CreateUser'">Crear Usuario</button>
        </div>

    }

    <script>
        document.getElementById('loginForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevenir el envío tradicional del formulario

            // Obtén los datos del formulario
            const formData = new FormData(event.target);
            const loginRequest = {
                Username: formData.get('Username'),
                Password: formData.get('Password')
            };

            // Realiza la solicitud al controlador
            const response = await fetch('/Login/Index', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(loginRequest)
            });

            const result = await response.json();

            if (result.success) {
                // Guarda el token en sessionStorage
                sessionStorage.setItem('authToken', result.token);
                window.location.href = result.redirectUrl;
            } else {
                alert('Error al iniciar sesión: ' + result.message);
            }
        });
    </script>
</body>
</html>
